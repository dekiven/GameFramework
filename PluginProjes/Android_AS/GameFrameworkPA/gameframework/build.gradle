apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compileOnly files('./libs/classes.jar')

//    **
//    //android权限申请类库，见：https://github.com/jokermonn/permissions4m
//    compile 'com.github.jokermonn:permissions4m:2.1.2-lib'
//    annotationProcessor 'com.github.jokermonn:permissions4m:2.1.2-processor'
//    **

    //android权限申请类库，见： https://github.com/yewei02538/HiPermission
    implementation 'me.weyye.hipermission:library:1.0.7'
}

//android.libraryVariants.all { variant ->
//
//    // Task names.
//    String variantName = "${variant.name.capitalize()}";
//    String deployTaskGroup = "plugin";
//    String deployTaskName = "deploy${variantName}PluginArchive";
//    String dependencyTaskName = "assemble${variantName}";
//
//    // Source.
//    String sourceAARFolder = "${buildDir.getPath()}/outputs/aar/";
//    String sourceAARName = "${project.name}-${variant.name}.aar";
//
//    // Target.
//    String targetAssetFolder = "Assets/Plugins/eppz! Alert";
//    String targetAARFolder = "${rootDir.getPath()}/../../${targetAssetFolder}";
//    String targetAARName = "eppz! Alert Android.aar";
//
//    // Create task.
//    task(deployTaskName, dependsOn: dependencyTaskName, type: Copy) {
//        logger.lifecycle("${variant.name.capitalize()} AAR Folder: ${sourceAARFolder}")
//        logger.lifecycle("${variant.name.capitalize()} Target AAR Folder: ${targetAARFolder}")
//        logger.lifecycle("${variant.name.capitalize()} Target AAR name: ${targetAARName}")
//
//        from(sourceAARFolder)
//        into(targetAARFolder)
//        include(sourceAARName)
//        rename(sourceAARName, targetAARName)
//    }.group = deployTaskGroup;
//}
